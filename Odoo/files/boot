#!/bin/bash
#
# This script is designed to be run inside the container
#

# fail hard and fast even on pipelines
set -eo pipefail

function help {
    set +e
    cat /help.txt
    set -e
}

function login  {
    echo "[INFO] Running bash"
    set +e
    if [[ ! -e $1 && $1 = "root" ]]; then
        /bin/bash
    else
        sudo -u odoo -i
    fi
    SERVICE_PID=$!
    set -e
}

function start {
    set +e
    echo "[INFO] Will use $file as configuration file"
    if [ ! -f "$file" ]; then
        cp /usr/share/doc/odoo/sample-odoo.conf $file 
        echo "[INFO] Copy template as configuration file $file"
    fi
    if [ ! -e $1 ];
    then
        echo "[INFO] Running odoo with additional args: $*"
    else
        echo "[INFO] Running odoo"
    fi
    exec sudo -u odoo odoo -c $file $*
    SERVICE_PID=$!
    set -e
}

function odoohelp {
    set +e
    exec sudo -u odoo odoo --help
    SERVICE_PID=$!
    set -e
}

function scaffold {
    set +e
    exec sudo -u odoo odoo scaffold $*
    SERVICE_PID=$!
    set -e
}

# smart shutdown on SIGINT and SIGTERM
function on_exit() {
    kill -TERM $SERVICE_PID
    wait $SERVICE_PID 2>/dev/null
    exit 0
}
trap on_exit INT TERM

file=${ODOO_CONF:-/etc/odoo/odoo.conf}
if [ "$ODOO_CHOWN" == "true" ]; then
    chown -R odoo /var/lib/odoo
fi
echo "[INFO] Running command..."
for arg in "$*"
do
    $arg
done

wait
